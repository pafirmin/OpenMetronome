{"version":3,"sources":["actions/types.js","actions/metronomeActions.js","components/TapTempo.js","components/Controls.js","helpers/Ticker.js","components/Metronome.js","components/styled-components/ProgramForm.js","components/programmer/CustomProgramForm.js","actions/programmerActions.js","components/programmer/CustomProgram.js","components/programmer/RampTempo.js","components/programmer/Programmer.js","GlobalStyle.js","App.js","reducers/metronomeReducer.js","reducers/programmerReducer.js","store/store.js","index.js"],"names":["TOGGLE_IS_PLAYING","SET_TEMPO","SET_METRE","SET_NOTE_VALUE","INCREMENT_BEAT_COUNT","RESET_BEAT_COUNT","NEXT_PROGRAM_CHUNK","CLEAR_PROGRAM","ADD_TO_PROGRAM","REMOVE_FROM_PROGRAM","setTempo","tempo","type","payload","setMetre","meter","setNoteValue","value","nextProgramChunk","obj","TapBtn","styled","button","TapTempo","process","REACT_APP_MIN_TEMPO","REACT_APP_MAX_TEMPO","useState","reference","setReference","dispatch","useDispatch","onClick","time","performance","now","interval","newTempo","Math","round","Wrapper","div","ControlContainer","StartBtn","NoteValue","span","props","selected","Controls","useSelector","state","metronome","metre","noteValue","isPlaying","sliderVal","setSliderVal","Slider","min","Number","max","onChange","_e","newVal","onChangeCommitted","valueLabelDisplay","valueLabelFormat","color","style","display","justifyContent","alignItems","marginTop","width","role","aria-label","fontSize","cursor","Ticker","onTick","division","nextNoteTime","stopPulse","beatCount","gainNode","createGain","this","connect","destination","gain","currentTime","startPulse","setInterval","pulse","clearInterval","playTick","oscillator","createOscillator","isInteger","onended","frequency","getFrequency","start","stop","ceil","AudioContext","TempoDisplay","swing","keyframes","Pendulum","css","Metronome","ticker","useRef","val","useEffect","current","init","setTimeout","form","CustomProgramForm","program","measures","silent","formValues","setFormValues","handleSubmit","settings","id","uuid","length","handleChange","e","target","name","ProgramForm","onSubmit","htmlFor","CustomProgram","currentChunk","console","log","handleDelete","cycleProgram","removeFromProgram","useCallback","nextIndex","indexOf","nextChunk","map","textAlign","RampTempo","tempoRamp","setTempoRamp","rampFrequency","setRampFrequency","TabbedNav","nav","Tab","isActive","Programmer","activeTab","setActiveTab","createGlobalStyle","MainWrapper","App","GlobalStyle","initialState","metronomeReducer","action","programmerReducer","filter","rootReducer","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9dbcb89b.chunk.js","sourcesContent":["export const TOGGLE_IS_PLAYING = \"TOGGLE_IS_PLAYING\";\nexport const SET_TEMPO = \"SET_TEMPO\";\nexport const SET_METRE = \"SET_METRE\";\nexport const SET_NOTE_VALUE = \"SET_NOTE_VALUE\";\nexport const INCREMENT_BEAT_COUNT = \"INCREMENT_BEAT_COUNT\";\nexport const RESET_BEAT_COUNT = \"RESET_BEAT_COUNT\";\nexport const NEXT_PROGRAM_CHUNK = \"NEXT_PROGRAM_CHUNK\";\nexport const CLEAR_PROGRAM = \"CLEAR_PROGRAM\";\nexport const ADD_TO_PROGRAM = \"ADD_TO_PROGRAM\";\nexport const REMOVE_FROM_PROGRAM = \"REMOVE_FROM_PROGRAM\";\n","import {\n  SET_TEMPO,\n  SET_METRE,\n  TOGGLE_IS_PLAYING,\n  INCREMENT_BEAT_COUNT,\n  RESET_BEAT_COUNT,\n  NEXT_PROGRAM_CHUNK,\n  SET_NOTE_VALUE,\n} from \"./types\";\n\nexport const setTempo = (tempo) => {\n  return {\n    type: SET_TEMPO,\n    payload: tempo,\n  };\n};\n\nexport const setMetre = (meter) => {\n  return {\n    type: SET_METRE,\n    payload: meter,\n  };\n};\n\nexport const setNoteValue = (value) => {\n  return {\n    type: SET_NOTE_VALUE,\n    payload: value,\n  };\n};\n\nexport const togglePlay = () => {\n  return { type: TOGGLE_IS_PLAYING };\n};\n\nexport const incrementBeatCount = (val) => {\n  return { type: INCREMENT_BEAT_COUNT, payload: val };\n};\n\nexport const resetBeatCount = () => {\n  return { type: RESET_BEAT_COUNT };\n};\n\nexport const nextProgramChunk = (obj) => {\n  return {\n    type: NEXT_PROGRAM_CHUNK,\n    payload: obj,\n  };\n};\n","import React, { useState } from \"react\";\nimport { setTempo } from \"../actions/metronomeActions\";\nimport { useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\n\nconst TapBtn = styled.button`\n  width: 100px;\n  height: 100px;\n  font-size: 1.1em;\n  border: 2px solid #fff;\n  color: #fff;\n  background-color: #575757;\n  cursor: pointer;\n  border-radius: 50%;\n`;\n\nconst TapTempo = () => {\n  const { REACT_APP_MIN_TEMPO, REACT_APP_MAX_TEMPO } = process.env;\n  const [reference, setReference] = useState();\n  const dispatch = useDispatch();\n\n  const handleTap = () => {\n    const time = performance.now();\n\n    if (reference) {\n      const interval = time - reference;\n      let newTempo = Math.round(60 / (interval / 1000));\n\n      if (newTempo > REACT_APP_MAX_TEMPO) {\n        newTempo = REACT_APP_MAX_TEMPO;\n      } else if (newTempo < REACT_APP_MIN_TEMPO) {\n        newTempo = REACT_APP_MIN_TEMPO;\n      }\n\n      dispatch(setTempo(newTempo));\n    }\n    setReference(time);\n  };\n\n  return (\n    <div>\n      <TapBtn onClick={handleTap}>Tap Tempo</TapBtn>\n    </div>\n  );\n};\n\nexport default TapTempo;\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport {\n  setMetre,\n  setNoteValue,\n  setTempo,\n  togglePlay,\n} from \"../actions/metronomeActions\";\nimport Slider from \"@material-ui/core/Slider\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport RemoveCircleOutlineRoundedIcon from \"@material-ui/icons/RemoveCircleOutlineRounded\";\nimport TapTempo from \"./TapTempo\";\n\nconst Wrapper = styled.div`\n  margin: 1rem auto 0 auto;\n  text-align: center;\n  width: 100%;\n`;\n\nconst ControlContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 1.4rem;\n  margin: 0 auto;\n`;\n\nconst StartBtn = styled.button`\n  border-radius: 0;\n  font-size: 1.6em;\n  padding: 0.6rem 1rem;\n  background: #425eca;\n  font: inherit;\n  color: inherit;\n  border: 1px solid #bdbdbd;\n  cursor: pointer;\n  width: 100px;\n\n  &:hover {\n    background: #33489b;\n  }\n`;\n\nconst NoteValue = styled.span`\n  font-size: 1.8em;\n  cursor: pointer;\n  color: ${(props) => (props.selected ? \"red\" : \"inherit\")};\n`;\n\nconst Controls = () => {\n  const { tempo, metre, noteValue, isPlaying } = useSelector(\n    (state) => state.metronome\n  );\n  const dispatch = useDispatch();\n  const [sliderVal, setSliderVal] = useState(tempo);\n\n  const handleTempo = () => {\n    dispatch(setTempo(sliderVal));\n  };\n\n  const incrementMetre = () => {\n    dispatch(setMetre(metre + 1));\n  };\n\n  const decrementMetre = () => {\n    dispatch(setMetre(metre - 1));\n  };\n\n  const setQuarterNote = () => {\n    dispatch(setNoteValue(1));\n  };\n\n  const setEighthNote = () => {\n    dispatch(setNoteValue(0.5));\n  };\n\n  return (\n    <Wrapper>\n      <Slider\n        value={sliderVal}\n        min={Number(process.env.REACT_APP_MIN_TEMPO)}\n        max={Number(process.env.REACT_APP_MAX_TEMPO)}\n        onChange={(_e, newVal) => setSliderVal(newVal)}\n        onChangeCommitted={handleTempo}\n        valueLabelDisplay=\"auto\"\n        valueLabelFormat={sliderVal + \" bpm\"}\n        color=\"secondary\"\n      />\n      <StartBtn onClick={() => dispatch(togglePlay())}>\n        {isPlaying ? \"Stop\" : \"Start\"}\n      </StartBtn>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          marginTop: \"1rem\",\n        }}\n      >\n        <div style={{ width: \"150px\" }}>\n          <span style={{ display: \"block\" }}>Metre</span>\n          <ControlContainer>\n            <RemoveCircleOutlineRoundedIcon\n              onClick={decrementMetre}\n              role=\"button\"\n              aria-label=\"Decrement meter\"\n              style={{ fontSize: 40, cursor: \"pointer\" }}\n            />\n            <span>{metre}</span>\n            <AddCircleOutlineIcon\n              onClick={incrementMetre}\n              role=\"button\"\n              aria-label=\"Increment meter\"\n              style={{ fontSize: 40, cursor: \"pointer\" }}\n            />\n          </ControlContainer>\n        </div>\n        <TapTempo />\n        <div style={{ width: \"150px\" }}>\n          <span style={{ display: \"block\" }}>Note</span>\n          <ControlContainer>\n            <NoteValue\n              onClick={setQuarterNote}\n              role=\"button\"\n              aria-label=\"Quarter note pulse\"\n              selected={noteValue === 1}\n            >\n              ♩\n            </NoteValue>\n            <NoteValue\n              onClick={setEighthNote}\n              role=\"button\"\n              aria-label=\"Eighth note pulse\"\n              selected={noteValue === 0.5}\n            >\n              ♫\n            </NoteValue>\n          </ControlContainer>\n        </div>\n      </div>\n    </Wrapper>\n  );\n};\n\nexport default Controls;\n","export default class Ticker extends AudioContext {\n  constructor({ onTick }) {\n    super();\n    this.tempo = 120;\n    this.metre = 4;\n    this.division = 1;\n    this.nextNoteTime = 0.0;\n    this.stopPulse = null;\n    this.onTick = onTick;\n    this.beatCount = 0;\n    this.gainNode = this.createGain();\n  }\n\n  init() {\n    this.gainNode.connect(this.destination);\n    this.gainNode.gain.value = 0.2;\n    this.nextNoteTime = this.currentTime;\n    this.startPulse();\n  }\n\n  startPulse() {\n    if (this.stopPulse) this.stopPulse();\n    const interval = setInterval(() => this.pulse(), 100);\n\n    this.stopPulse = () => {\n      clearInterval(interval);\n      this.beatCount = 0;\n    };\n  }\n\n  pulse() {\n    while (this.nextNoteTime < this.currentTime + 0.1) {\n      this.nextNoteTime += (60.0 / this.tempo) * this.division;\n      this.playTick();\n      this.beatCount += this.division;\n\n      if (this.beatCount === this.metre) {\n        this.beatCount = 0;\n      }\n    }\n  }\n\n  playTick() {\n    const oscillator = this.createOscillator();\n    if (Number.isInteger(this.beatCount)) {\n      oscillator.onended = this.onTick;\n    }\n    oscillator.connect(this.gainNode);\n    oscillator.frequency.value = this.getFrequency();\n    oscillator.start(this.nextNoteTime);\n    oscillator.stop(this.nextNoteTime + 0.1);\n  }\n\n  setTempo(tempo) {\n    this.tempo = tempo;\n  }\n\n  setMetre(metre) {\n    this.metre = metre;\n  }\n\n  setNoteValue(value) {\n    if (value === 1) {\n      this.beatCount = Math.ceil(this.beatCount);\n    }\n    this.division = value;\n  }\n\n  getFrequency() {\n    if (this.beatCount % this.metre === 0) {\n      return 550;\n    } else if (Number.isInteger(this.beatCount)) {\n      return 450;\n    } else {\n      return 350;\n    }\n  }\n}\n","import React, { useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled, { keyframes, css } from \"styled-components\";\nimport Ticker from \"../helpers/Ticker\";\nimport {\n  incrementBeatCount,\n  resetBeatCount,\n} from \"../actions/metronomeActions\";\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n  height: 300px;\n  margin: auto;\n`;\n\nconst TempoDisplay = styled.span`\n  display: block;\n  font-size: 3rem;\n  text-align: center;\n`;\n\nconst swing = keyframes`\n  0% {\n    transform: rotate(-45deg);\n  }\n  100% {\n    transform: rotate(45deg);\n  }\n`;\n\nconst Pendulum = styled.div`\n  width: 2px;\n  height: 80%;\n  position: absolute;\n  left: 50%;\n  bottom: 0;\n  background-color: #c4c4c4;\n  transform-origin: bottom center;\n  animation: ${(props) =>\n    props.isPlaying &&\n    css`\n      ${swing} ${60 / props.tempo}s linear infinite alternate\n    `};\n\n  &:after {\n    content: \"\";\n    position: absolute;\n    top: ${(props) => ((props.tempo - 50) / 168) * 100}%;\n    left: 50%;\n    transform: translate(-50%);\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    background-color: #c4c4c4;\n    transition: top 0.5s;\n  }\n`;\n\nconst Metronome = () => {\n  const dispatch = useDispatch();\n  const { tempo, metre, noteValue, isPlaying } = useSelector(\n    (state) => state.metronome\n  );\n  const ticker = useRef(\n    new Ticker({ onTick: () => dispatch(incrementBeatCount()) })\n  );\n\n  // Listen for tempo, metre and note value changes\n  useEffect(() => {\n    ticker.current.setTempo(tempo);\n  }, [tempo]);\n\n  useEffect(() => {\n    ticker.current.setMetre(metre);\n  }, [metre]);\n\n  useEffect(() => {\n    ticker.current.setNoteValue(noteValue);\n  }, [noteValue]);\n\n  /**\n   * The call to setTimeout below is a temporary\n   * workaround for the 1 or 2 beats that remain in\n   * the buffer after the ticker stops\n   */\n  useEffect(() => {\n    if (isPlaying) {\n      ticker.current.init();\n    } else if (ticker.current.stopPulse) {\n      ticker.current.stopPulse();\n      setTimeout(() => dispatch(resetBeatCount()), 1000);\n    }\n  }, [isPlaying, dispatch]);\n\n  return (\n    <Wrapper>\n      <TempoDisplay>{tempo}bpm</TempoDisplay>\n      <Pendulum isPlaying={isPlaying} tempo={tempo} />\n    </Wrapper>\n  );\n};\n\nexport default Metronome;\n","import styled from \"styled-components\";\n\nexport default styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 1rem;\n\n  & input {\n    width: 3em;\n    font: inherit;\n    padding: 0.2rem;\n    border: none;\n    border-radius: 3px;\n  }\n\n  & > * + * {\n    margin-left: 0.5rem;\n  }\n`;\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addToProgram } from \"../../actions/programmerActions\";\nimport { v4 as uuid } from \"uuid\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport { nextProgramChunk } from \"../../actions/metronomeActions\";\nimport ProgramForm from \"../styled-components/ProgramForm\";\n\nconst CustomProgramForm = () => {\n  const { program } = useSelector((state) => state.program);\n  const dispatch = useDispatch();\n  const [formValues, setFormValues] = useState({\n    measures: 4,\n    metre: 4,\n    tempo: 120,\n    silent: false,\n  });\n\n  const handleSubmit = () => {\n    const settings = {\n      measures: Number(formValues.measures),\n      metre: Number(formValues.metre),\n      tempo: Number(formValues.tempo),\n      silent: formValues.silent,\n      id: uuid(),\n    };\n    if (program.length === 0) {\n      dispatch(nextProgramChunk(settings));\n    }\n    dispatch(addToProgram(settings));\n  };\n\n  const handleChange = (e) => {\n    setFormValues({\n      ...formValues,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  return (\n    <ProgramForm onSubmit={handleSubmit}>\n      <input\n        type=\"number\"\n        name=\"measures\"\n        id=\"measures\"\n        value={formValues.measures}\n        onChange={handleChange}\n      />\n      <label htmlFor=\"measures\">bars of</label>\n      <label htmlFor=\"metre\">\n        <input\n          type=\"number\"\n          name=\"metre\"\n          id=\"metre\"\n          value={formValues.metre}\n          onChange={handleChange}\n        />\n      </label>\n      <span>at</span>\n      <input\n        type=\"number\"\n        min={60}\n        max={220}\n        name=\"tempo\"\n        id=\"tempo\"\n        value={formValues.tempo}\n        onChange={handleChange}\n      />\n      <label htmlFor=\"tempo\">bpm</label>\n      <AddCircleOutlineIcon\n        role=\"button\"\n        onClick={handleSubmit}\n        aria-label=\"Add to program\"\n        style={{ fontSize: 30, cursor: \"pointer\" }}\n      />\n    </ProgramForm>\n  );\n};\n\nexport default CustomProgramForm;\n","import { ADD_TO_PROGRAM, CLEAR_PROGRAM, REMOVE_FROM_PROGRAM } from \"./types\";\n\nexport const addToProgram = (obj) => {\n  return {\n    type: ADD_TO_PROGRAM,\n    payload: obj,\n  };\n};\n\nexport const removeFromProgram = (obj) => {\n  return {\n    type: REMOVE_FROM_PROGRAM,\n    payload: obj,\n  };\n};\n\nexport const clearProgram = () => {\n  return { type: CLEAR_PROGRAM };\n};\n","import React, { useEffect, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { nextProgramChunk } from \"../../actions/metronomeActions\";\nimport {\n  clearProgram,\n  removeFromProgram,\n} from \"../../actions/programmerActions\";\nimport CustomProgramForm from \"./CustomProgramForm\";\n\nconst CustomProgram = () => {\n  const { program, currentChunk } = useSelector((state) => state.program);\n  const beatCount = useSelector((state) => state.metronome.beatCount);\n  const dispatch = useDispatch();\n\n  console.log(beatCount);\n\n  const handleDelete = (obj) => {\n    if (program.length === 1) {\n      dispatch(clearProgram());\n      return;\n    }\n    if (obj.id === currentChunk.id) {\n      cycleProgram();\n    }\n    dispatch(removeFromProgram(obj));\n  };\n\n  const cycleProgram = useCallback(() => {\n    const nextIndex = program.indexOf(currentChunk) + 1;\n    const nextChunk = program[nextIndex] || program[0];\n\n    dispatch(nextProgramChunk(nextChunk));\n  }, [currentChunk, program, dispatch]);\n\n  useEffect(() => {\n    if (\n      currentChunk &&\n      beatCount === currentChunk.metre * currentChunk.measures\n    ) {\n      cycleProgram();\n    }\n  }, [beatCount, cycleProgram, currentChunk]);\n\n  return (\n    <div>\n      <CustomProgramForm />\n      {program.map((obj) => (\n        <p style={{ textAlign: \"center\" }} key={obj.id}>\n          {obj.measures} bars of {obj.metre} at {obj.tempo}bpm{\" \"}\n          <button type=\"button\" onClick={() => handleDelete(obj)}>\n            Remove\n          </button>\n        </p>\n      ))}\n    </div>\n  );\n};\n\nexport default CustomProgram;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setTempo } from \"../../actions/metronomeActions\";\nimport ProgramForm from \"../styled-components/ProgramForm\";\n\nconst RampTempo = () => {\n  const { tempo, metre, beatCount, isPlaying } = useSelector(\n    (state) => state.metronome\n  );\n  const dispatch = useDispatch();\n  const [tempoRamp, setTempoRamp] = useState(0);\n  const [rampFrequency, setRampFrequency] = useState(4);\n\n  useEffect(() => {\n    if (isPlaying && beatCount % (rampFrequency * metre) === 0) {\n      console.log(tempo + tempoRamp);\n      dispatch(setTempo(Math.min(tempo + Number(tempoRamp), 220)));\n    }\n  }, [beatCount]);\n\n  return (\n    <div>\n      <ProgramForm>\n        <label htmlFor=\"tempo\">Increase tempo by</label>\n        <input\n          min={0}\n          max={50}\n          type=\"number\"\n          name=\"tempoRamp\"\n          id=\"tempo\"\n          value={tempoRamp}\n          onChange={(e) => setTempoRamp(e.target.value)}\n        />\n        <span>bpm every</span>\n        <input\n          min={1}\n          type=\"number\"\n          name=\"measures\"\n          id=\"measures\"\n          value={rampFrequency}\n          onChange={(e) => setRampFrequency(e.target.value)}\n        />\n        <label htmlFor=\"measures\">measures</label>\n      </ProgramForm>\n    </div>\n  );\n};\n\nexport default RampTempo;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport CustomProgram from \"./CustomProgram\";\nimport RampTempo from \"./RampTempo\";\n\nconst TabbedNav = styled.nav`\n  display: flex;\n  justify-content: space-evenly;\n  font-size: 1.5rem;\n  margin-bottom: 2rem;\n`;\n\nconst Tab = styled.span`\n  border-bottom: 2px solid #d3d3d3;\n  width: 200px;\n  text-align: center;\n  padding-bottom: 0.3rem;\n  position: relative;\n  color: ${(props) => (props.isActive ? \"#dfdfdf\" : \"#9d9d9d\")};\n  cursor: pointer;\n  transition: color 0.3s;\n\n  &:after {\n    content: \"\";\n    position: absolute;\n    bottom: -2px;\n    left: 50%;\n    transform: translateX(-50%);\n    height: 2px;\n    width: ${(props) => (props.isActive ? \"100%\" : \"0\")};\n    background-color: red;\n    transition: width 0.3s;\n  }\n`;\n\nconst Programmer = () => {\n  const [activeTab, setActiveTab] = useState(1);\n\n  return (\n    <div style={{ marginTop: \"2rem\" }}>\n      <TabbedNav>\n        <Tab isActive={activeTab === 1} onClick={() => setActiveTab(1)}>\n          Tempo ramp\n        </Tab>\n        <Tab isActive={activeTab === 2} onClick={() => setActiveTab(2)}>\n          Custom\n        </Tab>\n      </TabbedNav>\n      {activeTab === 1 && <RampTempo />}\n\n      {activeTab === 2 && <CustomProgram />}\n    </div>\n  );\n};\n\nexport default Programmer;\n","import { createGlobalStyle } from \"styled-components\";\n\nexport default createGlobalStyle`\n  body {\n    background-color: #333;\n    color: #dfdfdf;\n    font-family: 'Montserrat', sans-serif;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Controls from \"./components/Controls\";\nimport Metronome from \"./components/Metronome\";\nimport Programmer from \"./components/programmer/Programmer\";\nimport GlobalStyle from \"./GlobalStyle\";\n\nconst MainWrapper = styled.div`\n  width: 100%;\n  margin: 3rem auto 0 auto;\n\n  @media screen and (min-width: 600px) {\n    width: 600px;\n  }\n`;\n\nconst App = () => {\n  return (\n    <MainWrapper>\n      <GlobalStyle />\n      <Metronome />\n      <Controls />\n      <Programmer />\n    </MainWrapper>\n  );\n};\n\nexport default App;\n","import {\n  TOGGLE_IS_PLAYING,\n  SET_TEMPO,\n  SET_METRE,\n  INCREMENT_BEAT_COUNT,\n  RESET_BEAT_COUNT,\n  NEXT_PROGRAM_CHUNK,\n  SET_NOTE_VALUE,\n} from \"../actions/types\";\n\nconst initialState = {\n  tempo: 120,\n  metre: 4,\n  noteValue: 1,\n  isPlaying: false,\n  beatCount: 0,\n};\n\nconst metronomeReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case TOGGLE_IS_PLAYING:\n      return { ...state, isPlaying: !state.isPlaying };\n    case SET_TEMPO:\n      return { ...state, tempo: payload };\n    case SET_METRE:\n      return { ...state, metre: payload };\n    case SET_NOTE_VALUE:\n      return { ...state, noteValue: payload };\n    case INCREMENT_BEAT_COUNT:\n      return { ...state, beatCount: state.beatCount + 1 };\n    case RESET_BEAT_COUNT:\n      return { ...state, beatCount: 0 };\n    case NEXT_PROGRAM_CHUNK:\n      return {\n        ...state,\n        tempo: payload.tempo,\n        metre: payload.metre,\n        beatCount: 0,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default metronomeReducer;\n","import {\n  ADD_TO_PROGRAM,\n  CLEAR_PROGRAM,\n  NEXT_PROGRAM_CHUNK,\n  REMOVE_FROM_PROGRAM,\n} from \"../actions/types\";\n\nconst initialState = {\n  program: [],\n  currentChunk: {},\n};\n\nconst programmerReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case ADD_TO_PROGRAM:\n      return { ...state, program: [...state.program, payload] };\n    case REMOVE_FROM_PROGRAM:\n      return {\n        ...state,\n        program: state.program.filter((obj) => obj.id !== payload.id),\n      };\n    case NEXT_PROGRAM_CHUNK:\n      return { ...state, currentChunk: payload };\n    case CLEAR_PROGRAM:\n      return initialState;\n    default:\n      return state;\n  }\n};\n\nexport default programmerReducer;\n","import metronomeReducer from \"../reducers/metronomeReducer\";\nimport { combineReducers, createStore } from \"redux\";\nimport programmerReducer from \"../reducers/programmerReducer\";\n\nconst rootReducer = combineReducers({\n  metronome: metronomeReducer,\n  program: programmerReducer,\n});\n\nconst store = createStore(rootReducer);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}